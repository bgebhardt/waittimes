# logstash config file for loading in wait times.

input {
    file {
        path => "/Users/bryan/code/personal/waittimes/disney_out/2017-07-14-22:33:15.csv"
        start_position => beginning
		sincedb_path => "/Users/bryan/code/personal/waittimes/sincedb_disney_debug"
    }
}
filter {
    csv {
        columns => [
          "park",
		  "ride_name",
		  "wait_time",
		  "status",
		  "date-time"
        ]
        separator => ","
    }
	# filter out headers.  TODO: figure out how to make this less fragile
	if [message] == "park, ride_name, wait_time, status, date-time" { 
		    drop { } 
	}
    date {
		# note this will update the timestamp field.  "date-time" is still imported as a string.
		match => ["date-time", "EEE MMM dd YYYY HH:mm:ss 'GMT'Z (zzz)"]
    }
    mutate {
        convert => ["wait_time", "integer"]
    }
}
output {
    stdout { codec => rubydebug }
}

#        path => "/Users/bryan/code/personal/waittimes/disney_out/2017-07-14-22:33:15.csv"
#        path => "/Users/bryan/code/personal/waittimes/disney_out/2017-07-14-22:45:05.csv"
#		match => ["date-time", "ISO8601"]

# Example line:
# "Disneyland","Astro Orbitor","15","Operating","Fri Jul 14 2017 22:33:18 GMT-0700 (PDT)"

# useful article on parsing data in using joda formating.
# https://stackoverflow.com/questions/1327229/how-can-i-parse-a-date-including-timezone-with-joda-time
# joda docs: [DateTimeFormat (Joda-Time 2.9.9 API)](http://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html)

# TODO: Need to create a logstash user as suggested here instead of using superuser:
# [Logstash and Security | X-Pack for the Elastic Stack [5.5] | Elastic](https://www.elastic.co/guide/en/x-pack/current/logstash.html)
# 
# Need to read in all files in a folder
# Ref link:
# [Configuring Logstash | Logstash Reference [5.5] | Elastic](https://www.elastic.co/guide/en/logstash/current/configuration.html)
# [File input plugin | Logstash Reference [5.5] | Elastic](https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html)